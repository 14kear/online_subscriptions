// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create": {
            "post": {
                "description": "Создает новую запись онлайн подписки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Создать запись подписки",
                "parameters": [
                    {
                        "description": "Данные подписки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RecordCreateUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданная запись",
                        "schema": {
                            "$ref": "#/definitions/entity.Record"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/delete/{id}": {
            "delete": {
                "description": "Удаляет запись подписки по указанному ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Удалить запись подписки",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "ID записи",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Запись успешно удалена"
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Запись не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/record/user_service": {
            "get": {
                "description": "Возвращает конкретную подписку пользователя по названию сервиса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Найти подписку пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "example": "user123",
                        "description": "ID пользователя",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Netflix",
                        "description": "Название сервиса",
                        "name": "service_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Запись подписки",
                        "schema": {
                            "$ref": "#/definitions/entity.Record"
                        }
                    },
                    "400": {
                        "description": "Неверные параметры",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Запись не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/record/{id}": {
            "get": {
                "description": "Возвращает запись подписки по указанному ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Получить запись подписки",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "ID записи",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Запись подписки",
                        "schema": {
                            "$ref": "#/definitions/entity.Record"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Запись не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/records": {
            "get": {
                "description": "Возвращает список подписок с фильтрацией и пагинацией",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Список подписок",
                "parameters": [
                    {
                        "type": "string",
                        "example": "user123",
                        "description": "Фильтр по ID пользователя",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Netflix",
                        "description": "Фильтр по названию сервиса",
                        "name": "service_name",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Лимит записей (макс. 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список подписок",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Record"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/records/summary": {
            "get": {
                "description": "Возвращает сумму платежей за указанный период с возможностью фильтрации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аналитика"
                ],
                "summary": "Сумма платежей за период",
                "parameters": [
                    {
                        "type": "string",
                        "example": "01-01-2023",
                        "description": "Начальная дата (DD-MM-YYYY)",
                        "name": "start_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "31-12-2023",
                        "description": "Конечная дата (DD-MM-YYYY)",
                        "name": "end_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "user123",
                        "description": "Фильтр по ID пользователя",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Netflix",
                        "description": "Фильтр по названию сервиса",
                        "name": "service_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"total_price\": 1500}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные параметры",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/records/user": {
            "get": {
                "description": "Возвращает список подписок для указанного пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Получить подписки пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "example": "user123",
                        "description": "ID пользователя",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список подписок",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Record"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ID пользователя",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/update/{id}": {
            "put": {
                "description": "Обновляет существующую запись подписки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Обновить запись подписки",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "ID записи",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RecordCreateUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Запись успешно обновлена"
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Запись не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Record": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "serviceName": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "handlers.RecordCreateUpdateRequest": {
            "type": "object",
            "required": [
                "expires_at",
                "price",
                "service_name",
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "localhost:8080",
	BasePath:         "/api/",
	Schemes:          []string{},
	Title:            "Online Subscriptions API",
	Description:      "API для управления онлайн подписками",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
